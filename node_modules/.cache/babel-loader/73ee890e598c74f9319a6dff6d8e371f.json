{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/vodenizeko/Desktop/robots/Robots/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/vodenizeko/Desktop/robots/Robots/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vodenizeko/Desktop/robots/Robots/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vodenizeko/Desktop/robots/Robots/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vodenizeko/Desktop/robots/Robots/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vodenizeko/Desktop/robots/Robots/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vodenizeko/Desktop/robots/Robots/src/Components/Typing.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n.typed-cursor{\\n  opacity: 1;\\n  animation: typedjsBlink 0.7s infinite;\\n  -webkit-animation: typedjsBlink 0.7s infinite;\\n  animation: typedjsBlink 0.7s infinite;\\n}\\n@keyframes typedjsBlink{\\n  50% { opacity: 0.0; }\\n}\\n@-webkit-keyframes typedjsBlink{\\n  0% { opacity: 1; }\\n  50% { opacity: 0.0; }\\n  100% { opacity: 1; }\\n}\\n.typed-fade-out{\\n  opacity: 0;\\n  transition: opacity .25s;\\n  -webkit-animation: 0;\\n  animation: 0;\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Typed from 'typed.js';\nimport styled from 'styled-components';\n\nvar Typing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Typing, _Component);\n\n  function Typing() {\n    _classCallCheck(this, Typing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Typing).apply(this, arguments));\n  }\n\n  _createClass(Typing, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // If you want to pass more options as props, simply add\n      // your desired props to this destructuring assignment.\n      var strings = this.props.strings; // You can pass other options here, such as typing speed, back speed, etc.\n\n      var options = {\n        strings: strings,\n        typeSpeed: 40,\n        backSpeed: 10,\n        loop: true\n      }; // this.el refers to the <span> in the render() method\n\n      this.typed = new Typed(this.el, options);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Make sure to destroy Typed instance on unmounting\n      // to prevent memory leaks\n      this.typed.destroy();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Type, {\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          whiteSpace: 'pre'\n        },\n        ref: function ref(el) {\n          _this.el = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Typing;\n}(Component);\n\nexport { Typing as default };\nvar Type = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/vodenizeko/Desktop/robots/Robots/src/Components/Typing.js"],"names":["React","Component","Typed","styled","Typing","strings","props","options","typeSpeed","backSpeed","loop","typed","el","destroy","whiteSpace","Type","div"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAGqBC,M;;;;;;;;;;;;;wCACC;AACnB;AACC;AAFkB,UAGVC,OAHU,GAGE,KAAKC,KAHP,CAGVD,OAHU,EAIlB;;AACA,UAAME,OAAO,GAAG;AACfF,QAAAA,OAAO,EAAEA,OADM;AAEdG,QAAAA,SAAS,EAAE,EAFG;AAGdC,QAAAA,SAAS,EAAE,EAHG;AAIdC,QAAAA,IAAI,EAAC;AAJS,OAAhB,CALkB,CAWlB;;AACA,WAAKC,KAAL,GAAa,IAAIT,KAAJ,CAAU,KAAKU,EAAf,EAAmBL,OAAnB,CAAb;AACD;;;2CAEsB;AACtB;AACC;AACA,WAAKI,KAAL,CAAWE,OAAX;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,GAAG,EAAE,aAACF,EAAD,EAAQ;AAAE,UAAA,KAAI,CAACA,EAAL,GAAUA,EAAV;AAAe,SAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAUD;;;;EAjCiCX,S;;SAAfG,M;AAoCrB,IAAMW,IAAI,GAAGZ,MAAM,CAACa,GAAV,mBAAV","sourcesContent":["import React,{Component} from 'react';\nimport Typed from 'typed.js';\nimport styled from 'styled-components';\n\n\nexport default class Typing extends Component {\n  componentDidMount() {\n  \t// If you want to pass more options as props, simply add\n    // your desired props to this destructuring assignment.\n    const { strings } = this.props;\n    // You can pass other options here, such as typing speed, back speed, etc.\n    const options = {\n    \tstrings: strings,\n      typeSpeed: 40,\n      backSpeed: 10,\n      loop:true\n    };\n    // this.el refers to the <span> in the render() method\n    this.typed = new Typed(this.el, options);\n  }\n\n  componentWillUnmount() {\n  \t// Make sure to destroy Typed instance on unmounting\n    // to prevent memory leaks\n    this.typed.destroy();\n  }\n\n  render() {\n    return (\n      <Type className=\"wrap\">\n        <div className=\"type-wrap\">\n          <span\n            style={{ whiteSpace: 'pre' }}\n            ref={(el) => { this.el = el; }}\n          />\n          </div>\n          </Type>\n\t )\n  }\n}\n\nconst Type = styled.div `\n.typed-cursor{\n  opacity: 1;\n  animation: typedjsBlink 0.7s infinite;\n  -webkit-animation: typedjsBlink 0.7s infinite;\n  animation: typedjsBlink 0.7s infinite;\n}\n@keyframes typedjsBlink{\n  50% { opacity: 0.0; }\n}\n@-webkit-keyframes typedjsBlink{\n  0% { opacity: 1; }\n  50% { opacity: 0.0; }\n  100% { opacity: 1; }\n}\n.typed-fade-out{\n  opacity: 0;\n  transition: opacity .25s;\n  -webkit-animation: 0;\n  animation: 0;\n}\n`;\n"]},"metadata":{},"sourceType":"module"}